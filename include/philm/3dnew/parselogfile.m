function [cutdata,cutlabel,agtrialnum,mttrialnum,trialnumS]=parselogfile(logfile);
% PARSELOGFILE Parse log file generated by matlab AG500 prompt programm
% function [cutdata,cutlabel,agtrialnum,mttrialnum,trialnumS]=parselogfile(logfile);
% parselogfile: Version 15.03.07
%
%   Description
%       Raw logfile should normally first be processed by adjlogfilev to set up
%       desired mapping between ag and mt trial numbers
%       Specify log file without extension (must be .txt)
%       cutlabel contains the string between [ ] in the log file
%       The number of rows in cutdata and cutlabel equals the maximum trial
%       number found in the log file. Thus any trials missing in the log
%       file will have nans in the corresponding row of cutdata (and an
%       empty label)
%       cutdata(:,1:2) contains the start and end of the trial in seconds
%       relative to start of first trial
%       Note that these times are not particularly accurate, but they can
%       be used for identifying major discrepancies with synch information
%       recorded on the DAT
%       trialnumS is a structure with the fields 'value' (for the trial
%       number) and 'label' with the whole of the corresponding line from
%       the log file. Thus this will include any additional comments on the
%       trial that are placed outside the square brackets.
%
%   See Also
%       ADJLOGFILEV
%       ADDLABCMT2SYNC_F

bigs=file2str([logfile '.txt']);

vv=strmatch('<',bigs);
if ~isempty(vv) bigs(vv,:)=[]; end;

vv=strmatch('%',bigs);
if ~isempty(vv) bigs(vv,:)=[];end;

vv=strmatch('!',bigs);
if ~isempty(vv) bigs(vv,:)=[]; end;


nrec=size(bigs,1);
mttrialnum=zeros(nrec,1);
agtrialnum=zeros(nrec,1);

%vttrialnum and stimnum extracted for completeness
%not currently used, or returned as output arguments
vttrialnum=zeros(nrec,1);
stimnum=zeros(nrec,1);

starttime=zeros(nrec,1);
trialdur=zeros(nrec,1);


labeltmp=cell(nrec,1);

ipi=findstr('[',bigs(1,:));
if isempty(ipi)
    disp('Simple version of log file not implemented!!!');
    return;
else
    
    try
        for ii=1:nrec
            [tmps,remstr]=strtok(bigs(ii,:));
            mttrialnum(ii)=str2num(tmps);
            cutdata(ii,4)=mttrialnum(ii);
            
            [tmps,remstr]=strtok(remstr);
            agtrialnum(ii)=str2num(tmps);
            
            %should also process time of day here: this would allow cutdata to be
            %set up like the sync data from the audio files
            
            [tmps,remstr]=strtok(remstr);
            vttrialnum(ii)=str2num(tmps);

            [tmps,remstr]=strtok(remstr);
            stimnum(ii)=str2num(tmps);

            [tmps,remstr]=strtok(remstr);
%convert time of day to seconds
            tmps=strrep(tmps,':',' ');
            tmptime=str2num(tmps);
            tmptime=tmptime(1)*3600 + tmptime(2)*60 + tmptime(1);

            starttime(ii)=tmptime;

            [tmps,remstr]=strtok(remstr);
            trialdur(ii)=str2num(tmps);

            
            
            
            ipi1=findstr('[',remstr);
            ipi2=findstr(']',remstr);
            labeltmp{ii}=remstr(ipi1+1:ipi2-1);    
        end;
        
    catch
        disp('Problem parsing log file');
        disp(['Record ', int2str(ii)]);
        disp(bigs(ii,:));
        disp(lasterr);
        keyboard;
        return;
    end;
    
    trialnumS.value=mttrialnum;
    trialnumS.label=bigs;
    
end;

starttime=starttime-starttime(1);


maxtrial=max(mttrialnum);
cutdata=ones(maxtrial,4)*NaN;
cutdata(:,3)=0;
cutdata(:,4)=(1:maxtrial)';

cutlabel=cell(maxtrial,1);
for ii=1:maxtrial cutlabel{ii}=' '; end;
for ii=1:nrec
    tmps=labeltmp{ii};
    mytrial=mttrialnum(ii);
    cutlabel{mytrial}=tmps;
    cutdata(mytrial,1:2)=[starttime(ii) starttime(ii)+trialdur(ii)];
end;

%keyboard;
cutlabel=char(cutlabel);
